basePath: /
definitions:
  http.ErrorResponse:
    properties:
      code:
        type: string
      message:
        type: string
    type: object
  http.categoryResponse:
    properties:
      description:
        type: string
      id:
        type: integer
      title:
        type: string
    type: object
  http.createCategoryRequest:
    properties:
      description:
        type: string
      title:
        type: string
    required:
    - description
    - title
    type: object
  http.createTopicRequest:
    properties:
      category_id:
        type: integer
      description:
        type: string
      title:
        type: string
    required:
    - category_id
    - description
    - title
    type: object
  http.messageResponse:
    properties:
      author_id:
        type: integer
      author_name:
        type: string
      content:
        type: string
      created_at:
        description: unix timestamp
        type: integer
      id:
        type: integer
      topic_id:
        type: integer
    type: object
  http.sendMessageRequest:
    properties:
      content:
        type: string
    required:
    - content
    type: object
  http.topicResponse:
    properties:
      author_id:
        type: integer
      author_name:
        type: string
      category_id:
        type: integer
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      title:
        type: string
    type: object
  http.updateMessageRequest:
    properties:
      content:
        type: string
    required:
    - content
    type: object
  http.updateTopicRequest:
    properties:
      description:
        type: string
      title:
        type: string
    required:
    - description
    - title
    type: object
host: localhost:8081
info:
  contact: {}
  description: Сервис чата на WebSocket и Swagger UI.
  title: Chat Service API
  version: "1.0"
paths:
  /categories:
    get:
      description: Returns all forum categories
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/http.categoryResponse'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.ErrorResponse'
      summary: List all categories
      tags:
      - Category
    post:
      consumes:
      - application/json
      description: Adds a forum category
      parameters:
      - description: New category
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/http.createCategoryRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/http.categoryResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/http.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/http.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Create new category
      tags:
      - Category
  /categories/{id}:
    delete:
      description: Removes a category
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/http.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/http.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Delete category
      tags:
      - Category
    get:
      description: Returns single category
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http.categoryResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.ErrorResponse'
      summary: Get category by ID
      tags:
      - Category
    put:
      consumes:
      - application/json
      description: Modifies an existing category
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/http.createCategoryRequest'
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/http.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/http.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Update category
      tags:
      - Category
  /categories/{id}/topics:
    get:
      description: Returns all topics under a given category
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/http.topicResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.ErrorResponse'
      summary: List topics in category
      tags:
      - Topic
  /messages/{id}:
    delete:
      description: Removes a message
      parameters:
      - description: Message ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/http.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/http.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Delete message
      tags:
      - Message
    put:
      consumes:
      - application/json
      description: Changes text of a message
      parameters:
      - description: Message ID
        in: path
        name: id
        required: true
        type: integer
      - description: New content
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/http.updateMessageRequest'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/http.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/http.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Update message
      tags:
      - Message
  /topics:
    post:
      consumes:
      - application/json
      description: Adds a topic under a category
      parameters:
      - description: New topic
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/http.createTopicRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/http.topicResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/http.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/http.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Create new topic
      tags:
      - Topic
  /topics/{id}:
    delete:
      description: Removes a topic
      parameters:
      - description: Topic ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/http.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/http.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Delete topic
      tags:
      - Topic
    get:
      description: Returns a single topic
      parameters:
      - description: Topic ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http.topicResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.ErrorResponse'
      summary: Get topic by ID
      tags:
      - Topic
    put:
      consumes:
      - application/json
      description: Modifies an existing topic
      parameters:
      - description: Topic ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/http.updateTopicRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Updated topic ID
          schema:
            additionalProperties:
              type: integer
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/http.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/http.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Update topic
      tags:
      - Topic
  /topics/{id}/messages:
    get:
      description: Returns all messages in a topic
      parameters:
      - description: Topic ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/http.messageResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.ErrorResponse'
      summary: List messages
      tags:
      - Message
    post:
      consumes:
      - application/json
      description: Creates a new message in topic
      parameters:
      - description: Topic ID
        in: path
        name: id
        required: true
        type: integer
      - description: Message text
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/http.sendMessageRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/http.messageResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Send message
      tags:
      - Message
  /ws/topics/{id}:
    get:
      description: Subscribes to live messages in a topic
      parameters:
      - description: Topic ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "101":
          description: Switching Protocols
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/http.ErrorResponse'
      security:
      - BearerAuth: []
      summary: WebSocket for real-time chat
      tags:
      - WebSocket
schemes:
- http
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
